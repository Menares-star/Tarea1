// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ordenes.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Orden struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Producto             string   `protobuf:"bytes,2,opt,name=Producto,proto3" json:"Producto,omitempty"`
	Valor                int32    `protobuf:"varint,3,opt,name=Valor,proto3" json:"Valor,omitempty"`
	Tienda               string   `protobuf:"bytes,4,opt,name=Tienda,proto3" json:"Tienda,omitempty"`
	Destino              string   `protobuf:"bytes,5,opt,name=Destino,proto3" json:"Destino,omitempty"`
	Prioridad            int32    `protobuf:"varint,6,opt,name=Prioridad,proto3" json:"Prioridad,omitempty"`
	Codigo               int32    `protobuf:"varint,7,opt,name=Codigo,proto3" json:"Codigo,omitempty"`
	Tipo                 string   `protobuf:"bytes,8,opt,name=Tipo,proto3" json:"Tipo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Orden) Reset()         { *m = Orden{} }
func (m *Orden) String() string { return proto.CompactTextString(m) }
func (*Orden) ProtoMessage()    {}
func (*Orden) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ea7e50e23b4c6d2, []int{0}
}

func (m *Orden) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Orden.Unmarshal(m, b)
}
func (m *Orden) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Orden.Marshal(b, m, deterministic)
}
func (m *Orden) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Orden.Merge(m, src)
}
func (m *Orden) XXX_Size() int {
	return xxx_messageInfo_Orden.Size(m)
}
func (m *Orden) XXX_DiscardUnknown() {
	xxx_messageInfo_Orden.DiscardUnknown(m)
}

var xxx_messageInfo_Orden proto.InternalMessageInfo

func (m *Orden) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Orden) GetProducto() string {
	if m != nil {
		return m.Producto
	}
	return ""
}

func (m *Orden) GetValor() int32 {
	if m != nil {
		return m.Valor
	}
	return 0
}

func (m *Orden) GetTienda() string {
	if m != nil {
		return m.Tienda
	}
	return ""
}

func (m *Orden) GetDestino() string {
	if m != nil {
		return m.Destino
	}
	return ""
}

func (m *Orden) GetPrioridad() int32 {
	if m != nil {
		return m.Prioridad
	}
	return 0
}

func (m *Orden) GetCodigo() int32 {
	if m != nil {
		return m.Codigo
	}
	return 0
}

func (m *Orden) GetTipo() string {
	if m != nil {
		return m.Tipo
	}
	return ""
}

type Seguimiento struct {
	Codigo               int32    `protobuf:"varint,1,opt,name=Codigo,proto3" json:"Codigo,omitempty"`
	Estado               string   `protobuf:"bytes,2,opt,name=Estado,proto3" json:"Estado,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Seguimiento) Reset()         { *m = Seguimiento{} }
func (m *Seguimiento) String() string { return proto.CompactTextString(m) }
func (*Seguimiento) ProtoMessage()    {}
func (*Seguimiento) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ea7e50e23b4c6d2, []int{1}
}

func (m *Seguimiento) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seguimiento.Unmarshal(m, b)
}
func (m *Seguimiento) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seguimiento.Marshal(b, m, deterministic)
}
func (m *Seguimiento) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seguimiento.Merge(m, src)
}
func (m *Seguimiento) XXX_Size() int {
	return xxx_messageInfo_Seguimiento.Size(m)
}
func (m *Seguimiento) XXX_DiscardUnknown() {
	xxx_messageInfo_Seguimiento.DiscardUnknown(m)
}

var xxx_messageInfo_Seguimiento proto.InternalMessageInfo

func (m *Seguimiento) GetCodigo() int32 {
	if m != nil {
		return m.Codigo
	}
	return 0
}

func (m *Seguimiento) GetEstado() string {
	if m != nil {
		return m.Estado
	}
	return ""
}

func init() {
	proto.RegisterType((*Orden)(nil), "main.Orden")
	proto.RegisterType((*Seguimiento)(nil), "main.Seguimiento")
}

func init() { proto.RegisterFile("ordenes.proto", fileDescriptor_4ea7e50e23b4c6d2) }

var fileDescriptor_4ea7e50e23b4c6d2 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x9b, 0xfc, 0x93, 0xb4, 0x9d, 0xfe, 0x2b, 0x38, 0x4a, 0x59, 0x82, 0x87, 0x92, 0x53,
	0x41, 0xc8, 0xa1, 0x1e, 0xa5, 0x27, 0xf5, 0xd0, 0x93, 0x25, 0x29, 0xde, 0x63, 0x76, 0x28, 0x03,
	0x36, 0x53, 0x36, 0x69, 0xbf, 0xa1, 0xdf, 0x4b, 0xb2, 0x49, 0x74, 0xc5, 0xdb, 0xfe, 0xde, 0xec,
	0x7b, 0xbb, 0xfb, 0x16, 0xe6, 0x62, 0x34, 0x55, 0x54, 0xa7, 0x27, 0x23, 0x8d, 0x60, 0x70, 0x2c,
	0xb8, 0x4a, 0x3e, 0x3d, 0x08, 0x5f, 0x5b, 0x1d, 0xaf, 0xc0, 0xdf, 0x6a, 0xe5, 0x2d, 0xbd, 0xd5,
	0x34, 0xf3, 0xb7, 0x1a, 0x63, 0x98, 0xec, 0x8c, 0xe8, 0x73, 0xd9, 0x88, 0xf2, 0xad, 0xfa, 0xcd,
	0x78, 0x0b, 0xe1, 0x5b, 0xf1, 0x21, 0x46, 0xfd, 0x5b, 0x7a, 0xab, 0x30, 0xeb, 0x00, 0x17, 0x10,
	0xed, 0x99, 0x2a, 0x5d, 0xa8, 0xc0, 0xee, 0xef, 0x09, 0x15, 0x8c, 0x9f, 0xa9, 0x6e, 0xb8, 0x12,
	0x15, 0xda, 0xc1, 0x80, 0x78, 0x07, 0xd3, 0x9d, 0x61, 0x31, 0xac, 0x0b, 0xad, 0x22, 0x9b, 0xf5,
	0x23, 0xb4, 0x79, 0x4f, 0xa2, 0xf9, 0x20, 0x6a, 0x6c, 0x47, 0x3d, 0x21, 0x42, 0xb0, 0xe7, 0x93,
	0xa8, 0x89, 0x0d, 0xb3, 0xeb, 0x64, 0x03, 0xb3, 0x9c, 0x0e, 0x67, 0x3e, 0x32, 0x55, 0x8d, 0x38,
	0x56, 0xef, 0x97, 0x75, 0x01, 0xd1, 0x4b, 0xdd, 0x14, 0x7a, 0x78, 0x52, 0x4f, 0xeb, 0x47, 0xf8,
	0x6f, 0x5b, 0xc8, 0xc9, 0x5c, 0xb8, 0x24, 0xbc, 0x87, 0x79, 0x46, 0x25, 0xf1, 0x85, 0x74, 0xd7,
	0xce, 0x2c, 0x6d, 0xeb, 0x4a, 0x2d, 0xc4, 0x2e, 0x24, 0xa3, 0x75, 0x0e, 0xe8, 0x9c, 0x3d, 0x44,
	0x6c, 0xe0, 0x66, 0x88, 0x70, 0x6f, 0x76, 0xdd, 0x79, 0x1d, 0x29, 0xfe, 0x2b, 0x25, 0xa3, 0xf7,
	0xc8, 0xfe, 0xd2, 0xc3, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xee, 0x7a, 0x45, 0xb6, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrdenServiceClient is the client API for OrdenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdenServiceClient interface {
	ReceivedOrden(ctx context.Context, in *Orden, opts ...grpc.CallOption) (*Orden, error)
}

type ordenServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrdenServiceClient(cc *grpc.ClientConn) OrdenServiceClient {
	return &ordenServiceClient{cc}
}

func (c *ordenServiceClient) ReceivedOrden(ctx context.Context, in *Orden, opts ...grpc.CallOption) (*Orden, error) {
	out := new(Orden)
	err := c.cc.Invoke(ctx, "/main.OrdenService/ReceivedOrden", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdenServiceServer is the server API for OrdenService service.
type OrdenServiceServer interface {
	ReceivedOrden(context.Context, *Orden) (*Orden, error)
}

// UnimplementedOrdenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrdenServiceServer struct {
}

func (*UnimplementedOrdenServiceServer) ReceivedOrden(ctx context.Context, req *Orden) (*Orden, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivedOrden not implemented")
}

func RegisterOrdenServiceServer(s *grpc.Server, srv OrdenServiceServer) {
	s.RegisterService(&_OrdenService_serviceDesc, srv)
}

func _OrdenService_ReceivedOrden_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Orden)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdenServiceServer).ReceivedOrden(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.OrdenService/ReceivedOrden",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdenServiceServer).ReceivedOrden(ctx, req.(*Orden))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrdenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.OrdenService",
	HandlerType: (*OrdenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceivedOrden",
			Handler:    _OrdenService_ReceivedOrden_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordenes.proto",
}

// SeguimientoServiceClient is the client API for SeguimientoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SeguimientoServiceClient interface {
	ReceivedSeguimiento(ctx context.Context, in *Seguimiento, opts ...grpc.CallOption) (*Seguimiento, error)
}

type seguimientoServiceClient struct {
	cc *grpc.ClientConn
}

func NewSeguimientoServiceClient(cc *grpc.ClientConn) SeguimientoServiceClient {
	return &seguimientoServiceClient{cc}
}

func (c *seguimientoServiceClient) ReceivedSeguimiento(ctx context.Context, in *Seguimiento, opts ...grpc.CallOption) (*Seguimiento, error) {
	out := new(Seguimiento)
	err := c.cc.Invoke(ctx, "/main.SeguimientoService/ReceivedSeguimiento", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SeguimientoServiceServer is the server API for SeguimientoService service.
type SeguimientoServiceServer interface {
	ReceivedSeguimiento(context.Context, *Seguimiento) (*Seguimiento, error)
}

// UnimplementedSeguimientoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSeguimientoServiceServer struct {
}

func (*UnimplementedSeguimientoServiceServer) ReceivedSeguimiento(ctx context.Context, req *Seguimiento) (*Seguimiento, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivedSeguimiento not implemented")
}

func RegisterSeguimientoServiceServer(s *grpc.Server, srv SeguimientoServiceServer) {
	s.RegisterService(&_SeguimientoService_serviceDesc, srv)
}

func _SeguimientoService_ReceivedSeguimiento_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Seguimiento)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeguimientoServiceServer).ReceivedSeguimiento(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.SeguimientoService/ReceivedSeguimiento",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeguimientoServiceServer).ReceivedSeguimiento(ctx, req.(*Seguimiento))
	}
	return interceptor(ctx, in, info, handler)
}

var _SeguimientoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.SeguimientoService",
	HandlerType: (*SeguimientoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceivedSeguimiento",
			Handler:    _SeguimientoService_ReceivedSeguimiento_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordenes.proto",
}
